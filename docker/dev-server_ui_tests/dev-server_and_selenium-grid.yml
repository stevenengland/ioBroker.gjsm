version: '3'
services:
  chrome:
    image: selenium/node-chrome
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  firefox:
    image: selenium/node-firefox
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  selenium-hub:
    image: selenium/hub
    container_name: selenium-hub
    depends_on:
      - iobroker-dev-server
    ports:
      - '4442:4442'
      - '4443:4443'
      - '4444:4444'

  iobroker-dev-server:
    image: iobroker-dev-server:dev
    container_name: iobroker-dev-server
    build:
      context: ../../
      dockerfile: ./docker/dev-server_ui_tests/Dockerfile
    environment:
      - IOB_DEVSERVER_PROFILE=ui_tests
      - IOB_DEVSERVER_TESTS_FROM=scenario00
    ports:
      - '8081:8081'
    volumes:
      - ../../src:/iobroker-adapter/src
      - ../../test:/iobroker-adapter/test
    # command: >
    #   sh -c "npm run devserver:preparation -- --reset_env=true --profile=$$IOB_DEVSERVER_PROFILE --tests-from=$$IOB_DEVSERVER_TESTS_FROM &&
    #          npx dev-server watch $$IOB_DEVSERVER_PROFILE"
    healthcheck:
      # We use `$$` here because:
      # one `$` goes to shell,
      # one `$` goes to `docker-compose.yml` escaping
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8081/
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 180s
